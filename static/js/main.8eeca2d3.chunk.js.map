{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","pageQuantity","Math","ceil","pageList","map","Number","_jsxs","className","children","_jsx","cn","disabled","href","onClick","page","active","items","concat","length","App","setItemsPerPage","useState","setCurrentPage","first","last","visibleItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"4JAAO,SAASA,EAAWC,EAAcC,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIF,MAAMG,EAA8BC,IAKpC,IALqC,MAC1CC,EAAK,QACLC,EAAO,YACPC,EAAW,aACXC,GACDJ,EACC,MAAMK,EAAeC,KAAKC,KAAKN,EAAQC,GACjCM,EAAqBf,EAAW,EAAGY,GAAcI,KAAIZ,GAAKa,OAAOb,KAQvE,OACEc,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAA0B,IAAhBb,IAAqBU,SAC9DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAc,OACdC,QAASA,KACHf,EAAc,GAChBC,EAAaD,EAAc,IAE7BU,SACH,WAKFL,EAASC,KAAIU,GACZL,cAAA,MACEF,UAAWG,IAAG,YAAa,CAAEK,OAAQD,IAAShB,IAAeU,SAG7DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,UACLC,QAASA,IAAMd,EAAae,GAAMN,SAEjCM,KAREA,KAaTL,cAAA,MACEF,UAAWG,IAAG,YAAa,CAAEC,SAAUb,IAAgBE,IAAgBQ,SAEvEC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAc,QACdC,QAASA,KACHf,EAAcE,GAChBD,EAAaD,EAAc,IAE7BU,SACH,eCpEHQ,EAAQ5B,EAAW,EAAG,IAAIgB,KAAIZ,GAAC,QAAAyB,OAAYzB,KAC3CI,EAAQoB,EAAME,OAEPC,EAAgBA,KAC3B,MAAOtB,EAASuB,GAAmBC,mBAAS,IACrCvB,EAAawB,GAAkBD,mBAAS,GAEzCE,GAASzB,EAAc,GAAKD,EAAU,EACtC2B,EAAOD,EAAQ1B,EAAU,EACzB4B,EAAeT,EAAMU,MAAMH,EAAQ,EAAGC,GAE5C,OACElB,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJF,eAAA,KAAGC,UAAU,OAAO,UAAQ,OAAMC,SAAA,CAAC,QAC3BV,EAAY,WAASyB,EAAM,MAAIC,EAAK,OAAK5B,EAAM,OAGvDU,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCF,eAAA,UACEC,UAAU,eACV,UAAQ,kBACRoB,GAAG,kBACHC,MAAO/B,EACPgC,SAAWC,IACTV,EAAgBf,OAAOyB,EAAMC,OAAOH,QACpCN,EAAe,IACfd,SAAA,CAEFC,cAAA,UAAQmB,MAAM,IAAGpB,SAAC,MAClBC,cAAA,UAAQmB,MAAM,IAAGpB,SAAC,MAClBC,cAAA,UAAQmB,MAAM,KAAIpB,SAAC,OACnBC,cAAA,UAAQmB,MAAM,KAAIpB,SAAC,YAIvBC,cAAA,SAAOuB,QAAQ,kBAAkBzB,UAAU,qBAAoBC,SAAC,sBAMlEC,cAACf,EAAU,CACTE,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAce,GAAQQ,EAAeR,KAGvCL,cAAA,MAAAD,SACGiB,EAAarB,KAAI6B,GAChBxB,cAAA,MAAI,UAAQ,OAAMD,SACfyB,GADqBA,WCvDlCC,IAASC,OAAO1B,cAACU,EAAG,IAAKiB,SAASC,eAAe,U","file":"static/js/main.8eeca2d3.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageQuantity = Math.ceil(total / perPage);\n  const pageList: number[] = getNumbers(1, pageQuantity).map(n => Number(n));\n\n  // const pageList: number[] = [];\n\n  // for (let page = 1; page <= pageQuantity; page += 1) {\n  //   pageList.push(page);\n  // }\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled=\"true\"\n          onClick={() => {\n            if (currentPage > 1) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {pageList.map(page => (\n        <li\n          className={cn('page-item', { active: page === currentPage })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href=\"#{page}\"\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn('page-item', { disabled: currentPage === pageQuantity })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled=\"false\"\n          onClick={() => {\n            if (currentPage < pageQuantity) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\nconst total = items.length;\n\nexport const App: React.FC = () => {\n  const [perPage, setItemsPerPage] = useState(3);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const first = (currentPage - 1) * perPage + 1;\n  const last = first + perPage - 1;\n  const visibleItems = items.slice(first - 1, last);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page {currentPage} (items {first} - {last} of {total})\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            className=\"form-control\"\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            value={perPage}\n            onChange={(event: React.ChangeEvent<HTMLSelectElement>) => {\n              setItemsPerPage(Number(event.target.value));\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={page => setCurrentPage(page)}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}