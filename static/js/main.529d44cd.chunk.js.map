{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","currentPage","onPageChange","total","perPage","pageQuantity","Math","ceil","result","i","push","_jsxs","className","children","_jsx","cn","disabled","href","onClick","map","page","active","items","from","to","numbers","n","getNumbers","concat","length","App","setItemsPerPage","useState","setCurrentPage","first","last","visibleItems","slice","_Fragment","Router","Route","path","id","value","onChange","event","Number","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2NAUO,MAAMA,EAA8BC,IAKpC,IALqC,YAC1CC,EAAW,aACXC,EAAY,MACZC,EAAK,QACLC,GACDJ,EACC,MAAMK,EAAeC,KAAKC,KAAKJ,EAAQC,GACjCI,EAAmB,GAEzB,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAcI,GAAK,EACtCD,EAAOE,KAAKD,GAGd,OACEE,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAA0B,IAAhBf,IAAqBY,SAC9DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAc,OACdC,QAASA,KACa,IAAhBjB,GACFC,EAAaD,EAAc,IAE7BY,SACH,WAKFL,EAAOW,KAAIC,GACVN,cAAA,MACEF,UAAWG,IAAG,YAAa,CAAEM,OAAQD,IAASnB,IAAeY,SAG7DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,KACLC,QAASA,IAAMhB,EAAakB,GAAMP,SAEjCO,KAREA,KAaTN,cAAA,MACEF,UAAWG,IAAG,YAAa,CAAEC,SAAUf,IAAgBI,IAAgBQ,SAEvEC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAc,QACdC,QAASA,KACHjB,EAAcI,GAChBH,EAAaD,EAAc,IAE7BY,SACH,eChEHS,ECNC,SAAoBC,EAAcC,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQf,KAAKgB,GAGf,OAAOD,EDDKE,CAAW,EAAG,IAAIR,KAAIO,GAAC,QAAAE,OAAYF,KAC3CvB,EAAQmB,EAAMO,OAEPC,EAAgBA,KAC3B,MAAO1B,EAAS2B,GAAmBC,mBAAS,IACrC/B,EAAagC,GAAkBD,mBAAS,GAEzCE,GAASjC,EAAc,GAAKG,EAAU,EACtC+B,EAAOD,EAAQ9B,EAAU,EACzBgC,EAAed,EAAMe,MAAMH,EAAQ,EAAGC,GAE5C,OACExB,eAAA2B,WAAA,CAAAzB,SAAA,CACEC,cAACyB,IAAM,CAAA1B,SACLC,cAAC0B,IAAK,CAACC,KAAK,wBAGd9B,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJF,eAAA,KAAGC,UAAU,OAAO,UAAQ,OAAMC,SAAA,CAAC,QAC3BZ,EAAY,WAASiC,EAAM,MAAIC,EAAK,OAAKhC,EAAM,OAGvDQ,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCF,eAAA,UACEC,UAAU,eACV,UAAQ,kBACR8B,GAAG,kBACHC,MAAOvC,EACPwC,SAAWC,IACTd,EAAgBe,OAAOD,EAAME,OAAOJ,QACpCV,EAAe,IACfpB,SAAA,CAEFC,cAAA,UAAQ6B,MAAM,IAAG9B,SAAC,MAClBC,cAAA,UAAQ6B,MAAM,IAAG9B,SAAC,MAClBC,cAAA,UAAQ6B,MAAM,KAAI9B,SAAC,OACnBC,cAAA,UAAQ6B,MAAM,KAAI9B,SAAC,YAIvBC,cAAA,SAAOkC,QAAQ,kBAAkBpC,UAAU,qBAAoBC,SAAC,sBAMlEC,cAACf,EAAU,CACTI,MAAOA,EACPC,QAASA,EACTH,YAAaA,EACbC,aAAckB,GAAQa,EAAeb,KAGvCN,cAAA,MAAAD,SACGuB,EAAajB,KAAI8B,GAChBnC,cAAA,MAAI,UAAQ,OAAMD,SACfoC,GADqBA,cE7DpCC,IAASC,OAAOrC,cAACgB,EAAG,IAAKsB,SAASC,eAAe,W","file":"static/js/main.529d44cd.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  currentPage: number;\n  onPageChange: (page: number) => void;\n  total: number;\n  perPage: number;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  currentPage,\n  onPageChange,\n  total,\n  perPage,\n}) => {\n  const pageQuantity = Math.ceil(total / perPage);\n  const result: number[] = [];\n\n  for (let i = 1; i <= pageQuantity; i += 1) {\n    result.push(i);\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled=\"true\"\n          onClick={() => {\n            if (currentPage !== 1) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {result.map(page => (\n        <li\n          className={cn('page-item', { active: page === currentPage })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href=\"#1\"\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn('page-item', { disabled: currentPage === pageQuantity })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled=\"false\"\n          onClick={() => {\n            if (currentPage < pageQuantity) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\nconst total = items.length;\n\nexport const App: React.FC = () => {\n  const [perPage, setItemsPerPage] = useState(3);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const first = (currentPage - 1) * perPage + 1;\n  const last = first + perPage - 1;\n  const visibleItems = items.slice(first - 1, last);\n\n  return (\n    <>\n      <Router>\n        <Route path=\"/:page?/:perPage?\" />\n      </Router>\n\n      <div className=\"container\">\n        <h1>Items with Pagination</h1>\n\n        <p className=\"lead\" data-cy=\"info\">\n          Page {currentPage} (items {first} - {last} of {total})\n        </p>\n\n        <div className=\"form-group row\">\n          <div className=\"col-3 col-sm-2 col-xl-1\">\n            <select\n              className=\"form-control\"\n              data-cy=\"perPageSelector\"\n              id=\"perPageSelector\"\n              value={perPage}\n              onChange={(event: React.ChangeEvent<HTMLSelectElement>) => {\n                setItemsPerPage(Number(event.target.value));\n                setCurrentPage(1);\n              }}\n            >\n              <option value=\"3\">3</option>\n              <option value=\"5\">5</option>\n              <option value=\"10\">10</option>\n              <option value=\"20\">20</option>\n            </select>\n          </div>\n\n          <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n            items per page\n          </label>\n        </div>\n\n        {/* Move this markup to Pagination */}\n        <Pagination\n          total={total}\n          perPage={perPage}\n          currentPage={currentPage}\n          onPageChange={page => setCurrentPage(page)}\n        />\n\n        <ul>\n          {visibleItems.map(item => (\n            <li data-cy=\"item\" key={item}>\n              {item}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}