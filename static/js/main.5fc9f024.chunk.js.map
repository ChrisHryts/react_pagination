{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","pageQuantity","Math","ceil","pageList","map","Number","isFirstPage","isLastPage","_jsxs","className","children","_jsx","cn","disabled","href","concat","onClick","page","active","items","length","App","setPerPage","useState","setCurrentPage","firstItem","lastItem","min","visibleItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"4JAAO,SAASA,EAAWC,EAAcC,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIF,MAAMG,EAA8BC,IAKpC,IALqC,MAC1CC,EAAK,QACLC,EAAO,YACPC,EAAW,aACXC,GACDJ,EACC,MAAMK,EAAeC,KAAKC,KAAKN,EAAQC,GACjCM,EAAqBf,EAAW,EAAGY,GAAcI,KAAIZ,GAAKa,OAAOb,KACjEc,EAA8B,IAAhBR,EACdS,EAAaT,IAAgBE,EAEnC,OACEQ,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAAUP,IAAeI,SACxDC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAI,IAAAC,OAAMjB,GACV,gBAAeQ,EACfU,QAASA,KACHlB,EAAc,GAChBC,EAAaD,EAAc,IAE7BY,SACH,WAKFP,EAASC,KAAIa,GACZN,cAAA,MACEF,UAAWG,IAAG,YAAa,CAAEM,OAAQD,IAASnB,IAAeY,SAG7DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAI,IAAAC,OAAME,GACVD,QAASA,IAAMjB,EAAakB,GAAMP,SAEjCO,KAREA,KAaTN,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAAUN,IAAcG,SACvDC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAI,IAAAC,OAAMjB,GACV,gBAAeS,EACfS,QAASA,KACHlB,EAAcE,GAChBD,EAAaD,EAAc,IAE7BY,SACH,eC9DHS,EAAQ/B,EAAW,EAAG,IAAIgB,KAAIZ,GAAC,QAAAuB,OAAYvB,KAC3CI,EAAQuB,EAAMC,OAEPC,EAAgBA,KAC3B,MAAOxB,EAASyB,GAAcC,mBAAS,IAChCzB,EAAa0B,GAAkBD,mBAAS,GACzCE,GAAa3B,EAAc,GAAKD,EAChC6B,EAAWzB,KAAK0B,IAAIF,EAAY5B,EAASD,GACzCgC,EAAeT,EAAMU,MAAMJ,EAAWC,GAO5C,OACElB,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJC,cAAA,KAAGF,UAAU,OAAO,UAAQ,OAAMC,SAAA,QAAAK,OACvBjB,EAAW,YAAAiB,OAAWU,EAAY,EAAC,OAAAV,OAAMW,EAAQ,QAAAX,OAAOnB,EAAK,OAGxEY,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCF,eAAA,UACEC,UAAU,eACV,UAAQ,kBACRqB,GAAG,kBACHC,MAAOlC,EACPmC,SApBgBC,IACxBX,EAAWjB,OAAO4B,EAAMC,OAAOH,QAC/BP,EAAe,IAkBoBd,SAAA,CAE3BC,cAAA,UAAQoB,MAAM,IAAGrB,SAAC,MAClBC,cAAA,UAAQoB,MAAM,IAAGrB,SAAC,MAClBC,cAAA,UAAQoB,MAAM,KAAIrB,SAAC,OACnBC,cAAA,UAAQoB,MAAM,KAAIrB,SAAC,YAIvBC,cAAA,SAAOwB,QAAQ,kBAAkB1B,UAAU,qBAAoBC,SAAC,sBAKlEC,cAACjB,EAAU,CACTE,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAcyB,IAGhBb,cAAA,MAAAD,SACGkB,EAAaxB,KAAIgC,GAChBzB,cAAA,MAAI,UAAQ,OAAMD,SACf0B,GADqBA,WCvDlCC,IAASC,OAAO3B,cAACU,EAAG,IAAKkB,SAASC,eAAe,U","file":"static/js/main.5fc9f024.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageQuantity = Math.ceil(total / perPage);\n  const pageList: number[] = getNumbers(1, pageQuantity).map(n => Number(n));\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === pageQuantity;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: isFirstPage })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          aria-disabled={isFirstPage}\n          onClick={() => {\n            if (currentPage > 1) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {pageList.map(page => (\n        <li\n          className={cn('page-item', { active: page === currentPage })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', { disabled: isLastPage })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          aria-disabled={isLastPage}\n          onClick={() => {\n            if (currentPage < pageQuantity) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\nconst total = items.length;\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const firstItem = (currentPage - 1) * perPage;\n  const lastItem = Math.min(firstItem + perPage, total);\n  const visibleItems = items.slice(firstItem, lastItem);\n\n  const handlePageUpdate = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(event.target.value));\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem + 1} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            className=\"form-control\"\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            value={perPage}\n            onChange={handlePageUpdate}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}