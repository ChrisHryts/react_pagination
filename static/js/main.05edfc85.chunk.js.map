{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","currentPage","setCurrentPage","pageQuantity","result","i","push","_jsxs","className","children","_jsx","cn","disabled","href","onClick","map","page","active","itemsLength","from","to","numbers","n","getNumbers","concat","length","App","itemsPerPage","setItemsPerPage","useState","Math","ceil","id","value","onChange","event","Number","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"uLASO,MAAMA,EAA8BC,IAIpC,IAJqC,YAC1CC,EAAW,eACXC,EAAc,aACdC,GACDH,EACC,MAAMI,EAAmB,GAEzB,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAcE,GAAK,EACtCD,EAAOE,KAAKD,GAGd,OACEE,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAA0B,IAAhBX,IAAqBQ,SAC9DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAc,OACdC,QAASA,KACa,IAAhBb,GACFC,EAAeD,EAAc,IAE/BQ,SACH,WAKFL,EAAOW,KAAIC,GACVN,cAAA,MACEF,UAAWG,IAAG,YAAa,CAAEM,OAAQD,IAASf,IAAeQ,SAG7DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,KACLC,QAASA,IAAMZ,EAAec,GAAMP,SAEnCO,KAREA,KAaTN,cAAA,MAAIF,UAAU,YAAWC,SACvBC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAc,QACdC,QAASA,KACHb,EAAcE,GAChBD,EAAeD,EAAc,IAE/BQ,SACH,eC3DHS,ECNC,SAAoBC,EAAcC,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQf,KAAKgB,GAGf,OAAOD,EDFKE,CAAW,EAAG,IAAIR,KAAIO,GAAC,QAAAE,OAAYF,KACvBG,OAEbC,EAAgBA,KAC3B,MAAOC,EAAcC,GAAmBC,mBAAS,IAC1C5B,EAAaC,GAAkB2B,mBAAS,GAEzC1B,EAAe2B,KAAKC,KAAKb,EAAcS,GAG7C,OACEpB,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJF,eAAA,KAAGC,UAAU,OAAO,UAAQ,OAAMC,SAAA,CAAC,QAC3BR,EAAY,oBAAkBiB,EAAY,OAGlDX,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCF,eAAA,UACEC,UAAU,eACV,UAAQ,kBACRwB,GAAG,kBACHC,MAAON,EACPO,SAAWC,GACTP,EAAgBQ,OAAOD,EAAME,OAAOJ,QACrCxB,SAAA,CAEDC,cAAA,UAAQuB,MAAM,IAAGxB,SAAC,MAClBC,cAAA,UAAQuB,MAAM,IAAGxB,SAAC,MAClBC,cAAA,UAAQuB,MAAM,KAAIxB,SAAC,OACnBC,cAAA,UAAQuB,MAAM,KAAIxB,SAAC,YAIvBC,cAAA,SAAO4B,QAAQ,kBAAkB9B,UAAU,qBAAoBC,SAAC,sBAMlEC,cAACX,EAAU,CACTE,YAAaA,EACbC,eAAgBA,EAChBC,aAAcA,IAGhBI,eAAA,MAAAE,SAAA,CACEC,cAAA,MAAI,UAAQ,OAAMD,SAAC,WACnBC,cAAA,MAAI,UAAQ,OAAMD,SAAC,WACnBC,cAAA,MAAI,UAAQ,OAAMD,SAAC,WACnBC,cAAA,MAAI,UAAQ,OAAMD,SAAC,WACnBC,cAAA,MAAI,UAAQ,OAAMD,SAAC,kBEvD3B8B,IAASC,OAAO9B,cAACgB,EAAG,IAAKe,SAASC,eAAe,U","file":"static/js/main.05edfc85.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  currentPage: number;\n  setCurrentPage: (page: number) => void;\n  pageQuantity: number;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  currentPage,\n  setCurrentPage,\n  pageQuantity,\n}) => {\n  const result: number[] = [];\n\n  for (let i = 1; i <= pageQuantity; i += 1) {\n    result.push(i);\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled=\"true\"\n          onClick={() => {\n            if (currentPage !== 1) {\n              setCurrentPage(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {result.map(page => (\n        <li\n          className={cn('page-item', { active: page === currentPage })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href=\"#1\"\n            onClick={() => setCurrentPage(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className=\"page-item\">\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled=\"false\"\n          onClick={() => {\n            if (currentPage < pageQuantity) {\n              setCurrentPage(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\nconst itemsLength = items.length;\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(3);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const pageQuantity = Math.ceil(itemsLength / itemsPerPage);\n  // const itemsOnLastPage = itemsLength - (pageQuantity - 1) * itemsPerPage;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page {currentPage} (items 1 - 5 of {itemsLength})\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            className=\"form-control\"\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            value={itemsPerPage}\n            onChange={(event: React.ChangeEvent<HTMLSelectElement>) =>\n              setItemsPerPage(Number(event.target.value))\n            }\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n        pageQuantity={pageQuantity}\n      />\n\n      <ul>\n        <li data-cy=\"item\">Item 1</li>\n        <li data-cy=\"item\">Item 2</li>\n        <li data-cy=\"item\">Item 3</li>\n        <li data-cy=\"item\">Item 4</li>\n        <li data-cy=\"item\">Item 5</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}